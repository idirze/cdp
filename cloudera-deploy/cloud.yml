---

# Copyright 2021 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This play is imported from a separate playbook so that Ansible tags are intuitively propagated from main.yml
- name: Marshal Cloud Deployment
  hosts: localhost
  environment: "{{ globals.env_vars }}"
  gather_facts: yes
  tasks:
    - name: Import the Sequence execution Role for Cloud Run
      ansible.builtin.import_role:
        name: cloudera.exe.sequence
      when: init__call_cloud_role | bool

    - name: Persist Dynamic Inventory to Definition Path if exists
      tags: always
      when:
        - infra__dynamic_inventory_host_entries is defined
        - infra__dynamic_inventory_host_entries | length > 0
        - init__dynamic_inventory_template is defined
        - init__dynamic_inventory_template | length > 0
      ansible.builtin.include_role:
        name: cloudera_deploy
        tasks_from: persist_dynamic_inventory
        apply:
          tags: always

# TODO: Set timeout waiting for utility VM to be ready
- name: Process Download Mirror on Utility VM
  hosts: cldr_utility
  tags: always
  gather_facts: yes
  tasks:
    - name: Fetch necessary variables from Ansible Controller
      ansible.builtin.set_fact:
        globals: "{{ hostvars['localhost']['globals'] }}"
        init__download_mirror_artefact: "{{ hostvars['localhost']['init__download_mirror_artefact'] }}"

    - name: Prepare Cloudera Subscription Credentials
      ansible.builtin.include_role:
        name: cloudera.cluster.deployment.credential
      when: globals.cloudera_license_file is defined
      vars:
        cloudera_manager_license_file: "{{ globals.cloudera_license_file }}"

    - name: Populate the Download Mirror with new files
      ansible.builtin.include_role:
        name: cloudera_deploy
        tasks_from: populate_download_mirror
      when: globals.download_mirror_targets | length > 0

- name: Update relevant Download Mirror Cache listing
  hosts: localhost
  tags: always
  gather_facts: no
  tasks:
    - name: Refresh Listing of target cache contents
      when:
        - init__download_mirror_bucket_name is defined
        - "'teardown' not in ansible_run_tags"
      register: __infra_download_mirror_listing
      failed_when:
        - __download_mirror_lookup_initial.s3_keys is not defined
        - "'cannot be found' not in __download_mirror_lookup_initial.msg"
      amazon.aws.aws_s3:
        bucket: "{{ init__download_mirror_bucket_name }}"
        mode: list

    - name: Prepare updated Download Mirror contents as URLs
      when: __infra_download_mirror_listing.s3_keys is defined
      loop: "{{ __infra_download_mirror_listing.s3_keys }}"
      loop_control:
        loop_var: __download_mirror_s3_urls_item
      ansible.builtin.set_fact:
        __download_mirror_url_listing: "{{ __download_mirror_url_listing | default([]) + [['https:/', init__download_mirror_bucket_name + '.s3.amazonaws.com', __download_mirror_s3_urls_item ] | join('/') ] }}"

    - name: Persist Download Mirror to Definition path
      when:
        - __download_mirror_url_listing is defined
        - __download_mirror_url_listing | length > 0
      community.general.ini_file:
        path: "{{ init__download_mirror_artefact }}"
        section: "{{ globals.infra_type }}:{{ globals.region }}"
        option: "{{ init__download_mirror_bucket_name }}"
        value: "{{ __download_mirror_url_listing }}"